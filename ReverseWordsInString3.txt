Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

Example 1:
Input: "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Note: In the string, each word is separated by single space and there will not be any extra space in the string.

Solution:
import java.lang.*;
class Solution {
    public String reverseWords(String s) { 
       char[] ch = s.toCharArray();
       char[] c = new char[ch.length+1];
       for(int i=0; i<ch.length; i++)
           c[i] = ch[i];
       c[c.length - 1] = ' ';
       int start = 0, end = 0,t=0;
       for(int i=0; i< c.length; i++)
       { 
           if(c[i] != ' ')
           {
               end++;
           }
           else if(c[i] == ' ')
           {
                t = end--; 
                while(start<end)
                {
                    char temp = c[start];
                    c[start++] = c[end];
                    c[end--] = temp;
                }  
                start = t + 1;
                end = start;   
           }
           
       }
       for(int i=0; i<ch.length; i++)
           ch[i] = c[i]; 
       return new String(ch);
        
    }
}
